<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="map">
	<!-- 건물 형태와 검색어 검색 리스트 -->
	<!-- 처음 검색 쿼리로 기준은 매매로 정해놓는다. -->
	<select id="searchList" parameterType="filterVo" resultType="buildingSaleVo">
		select  artcl_zip, artcl_gu, artcl_dong, artcl_complx, artcl_nm, artcl_rd, dl_ty,  artcl_rd_detail,
        round(avg(dl_price/round(dl_excv_area/3.3,0)),0) as avg_dl, artcl_lat, artcl_lng
		from (
	        select * from article  
	        where artcl_bc = #{building} 
	        and artcl_dong = #{searchName} 
	        or artcl_gu = #{searchName}  
	        or artcl_complx like #{searchName} || '%' 
	        or artcl_nm like #{searchName} || '%' 
     	) 
        a inner join (select * from deal where dl_ty = '매매') d 
                on (a.artcl_gu = d.dl_gu 
                    and a.artcl_dong = d.dl_dong 
                    and a.artcl_zip = d.dl_zip 
                    and a.artcl_rd = d.dl_rd)
		group by artcl_zip, artcl_gu, artcl_complx, artcl_nm, artcl_rd, artcl_rd_detail, artcl_dong,artcl_lat, artcl_lng, dl_ty
	</select>
	
	<!-- 단/다세대일 경우의 검색 질의 쿼리문 -->
	<select id="searchSingleList" parameterType="filterVo" resultType="buildingSaleVo">
		select  artcl_zip, artcl_gu, artcl_dong, artcl_complx, artcl_nm, artcl_rd, dl_ty,  artcl_rd_detail,
        round(avg(dl_price/round(dl_excv_area/3.3,0)),0) as avg_dl, artcl_lat, artcl_lng
		from (
	        select * from article  
	        where artcl_bc in ('single', 'multi', 'multip')
	        and artcl_dong = #{searchName} 
	        or artcl_gu = #{searchName}  
	        or artcl_complx like #{searchName} || '%' 
	        or artcl_nm like #{searchName} || '%' 
     	) 
        a inner join (select * from deal where dl_ty = '매매') d 
                on (a.artcl_gu = d.dl_gu 
                    and a.artcl_dong = d.dl_dong 
                    and a.artcl_zip = d.dl_zip 
                    and a.artcl_rd = d.dl_rd)
		group by artcl_zip, artcl_gu, artcl_complx, artcl_nm, artcl_rd, artcl_rd_detail, artcl_dong,artcl_lat, artcl_lng, dl_ty
	</select>
	
	<!-- 필터를 이용한 매물 리스트 출력 -->
	<select id="searchFilterList" parameterType="filterVo" resultType="buildingSaleVo">
		
		select  artcl_zip, artcl_gu, artcl_dong, artcl_complx, artcl_nm, artcl_rd, dl_ty,  artcl_rd_detail,artcl_bc,
        round(avg(dl_price/round(dl_excv_area/3.3,0)),0) as avg_dl, artcl_lat, artcl_lng,round(avg(dl_depos),0)as dl_depos,round(avg(dl_rnt),0)as dl_rnt 
		from (
	        select * from article  
	        where artcl_bc = #{building} 
	        <if test="artcl_const_y != null and artcl_const_y != '' and artcl_const_y != 'all' "> 
				and artcl_const_y <![CDATA[ >= ]]> to_char(extract(year from sysdate)- #{artcl_const_y})
			</if>
	        and artcl_dong = #{searchName}
	        or artcl_gu = #{searchName}  
	        or artcl_complx like #{searchName} || '%' 
	        or artcl_nm like #{searchName} || '%' 
	        
     	) 
        a inner join (select * from deal where dl_ty = #{dl_ty}
        				<if test="dl_excv_area != 0"> 
									and round(dl_excv_area/3.3,0) between #{dl_excv_area} and #{dl_excv_area}+9
						</if>
						<if test="dl_price1 != null">
							<choose>
								<when test="dl_ty == '매매'">
									<choose>
										<when test="dl_price2 == 30">
											and dl_price <![CDATA[ >= ]]> #{dl_price1}
										</when>
										<when test="dl_price2 != 30">
											and dl_price between #{dl_price1} and #{dl_price2}
										</when>
									</choose>
								</when>
								<when test="dl_ty == '전세'">
									<choose>
										<when test="dl_price2 == 30000 ">
											and dl_depos <![CDATA[ >= ]]> #{dl_price1}
										</when>
										<when test="dl_price2 != 30000 ">
											and dl_depos between #{dl_price1} and #{dl_price2}
										</when>
									</choose>
								</when>
								<when test="dl_ty =='월세'">
									<choose>
										<when test="dl_price2 == 10000">
											and dl_depos <![CDATA[ >= ]]> #{dl_price1}
										</when>
										<when test="dl_price2 != 10000">
											and dl_depos between #{dl_price1} and #{dl_price2}
										</when>
									</choose>
									<choose>
										<when test="dl_rnt2 == 400">
											and dl_rnt <![CDATA[ >= ]]> #{dl_rnt1}
										</when>
										<when test="dl_rnt2 != 400">
											and dl_rnt between #{dl_rnt1} and #{dl_rnt2}
										</when>
									</choose>
								</when>
							</choose>
								</if>) d 
                on (a.artcl_gu = d.dl_gu 
                    and a.artcl_dong = d.dl_dong 
                    and a.artcl_zip = d.dl_zip 
                    and a.artcl_rd = d.dl_rd)
		group by artcl_zip, artcl_gu, artcl_complx, artcl_nm, artcl_rd, artcl_rd_detail, artcl_dong,artcl_lat, artcl_lng, dl_ty, artcl_bc

	</select>
	
	<!-- 단/다세대일 경우 필터를 이용한 매물 리스트 출력 -->
	<select id="searchSingleFilterList" parameterType="filterVo" resultType="buildingSaleVo">
		select  artcl_zip, artcl_gu, artcl_dong, artcl_complx, artcl_nm, artcl_rd, dl_ty,  artcl_rd_detail,artcl_bc,
        round(avg(dl_price/round(dl_excv_area/3.3,0)),0) as avg_dl, artcl_lat, artcl_lng,, artcl_lng,round(avg(dl_depos),0)as dl_depos,round(avg(dl_rnt),0)as dl_rnt 
		from (
	        select * from article  
	        where artcl_bc in ('single','multi','multip')
	        <if test="artcl_const_y != null and artcl_const_y != '' and artcl_const_y != 'all' "> 
				and artcl_const_y <![CDATA[ >= ]]> to_char(extract(year from sysdate)- #{artcl_const_y})
			</if>
	        and artcl_dong = #{searchName}
	        or artcl_gu = #{searchName}   
	        or artcl_complx like #{searchName} || '%' 
	        or artcl_nm like #{searchName} || '%' 
     	) 
        a inner join (select * from deal where dl_ty = #{dl_ty}
        				<if test="dl_excv_area != 0"> 
											and round(dl_excv_area/3.3,0) between #{dl_excv_area} and #{dl_excv_area}+9
										</if>
										
										<if test="dl_price1 != null">
											<choose>
												<when test="dl_ty == '매매'">
													<choose>
														<when test="dl_price2 == 30">
															and dl_price <![CDATA[ >= ]]> #{dl_price1}
														</when>
														<when test="dl_price2 != 30">
															and dl_price between #{dl_price1} and #{dl_price2}
														</when>
													</choose>
												</when>
												<when test="dl_ty == '전세'">
													<choose>
														<when test="dl_price2 == 30000 ">
															and dl_depos <![CDATA[ >= ]]> #{dl_price1}
														</when>
														<when test="dl_price2 != 30000 ">
															and dl_depos between #{dl_price1} and #{dl_price2}
														</when>
													</choose>
												</when>
												<when test="dl_ty =='월세'">
													<choose>
														<when test="dl_price2 == 10000">
															and dl_depos <![CDATA[ >= ]]> #{dl_price1}
														</when>
														<when test="dl_price2 != 10000">
															and dl_depos between #{dl_price1} and #{dl_price2}
														</when>
													</choose>
													<choose>
														<when test="dl_rnt2 == 400">
															and dl_rnt <![CDATA[ >= ]]> #{dl_rnt1}
														</when>
														<when test="dl_rnt2 != 400">
															and dl_rnt between #{dl_rnt1} and #{dl_rnt2}
														</when>
													</choose>
												</when>
											</choose>
										</if>) d 
                on (a.artcl_gu = d.dl_gu 
                    and a.artcl_dong = d.dl_dong 
                    and a.artcl_zip = d.dl_zip 
                    and a.artcl_rd = d.dl_rd)
		group by artcl_zip, artcl_gu, artcl_complx, artcl_nm, artcl_rd, artcl_rd_detail, artcl_dong,artcl_lat, artcl_lng, dl_ty, artcl_bc
	</select>

</mapper>