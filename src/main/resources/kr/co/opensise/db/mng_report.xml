<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mng_report">

<!-- ** 신고 분류 ** -->
	<!-- 신고분류 리스트 -->
	<select id="getRptCf" resultType="rpt_cfVo">
		Select rpt_classf, rpt_cf_nm From report_classf Order by rpt_classf
	</select>
	
	<!-- 신고분류 생성 -->
	<insert id="insertRptCf" parameterType="string">
		Insert Into report_classf (rpt_classf, rpt_cf_nm) 
		Values (seq_rpt_cf_no.nextval, #{rpt_cf_nm})
	</insert>
	
	<!-- 신고분류 수정 -->
	<update id="updateRptCf" parameterType="rpt_cfVo">
		Update report_classf Set rpt_cf_nm = #{rpt_cf_nm} Where rpt_classf =#{rpt_classf}
	</update>
	
	<!-- 신고분류 삭제 -->
	<delete id="deleteRptCf" parameterType="int">
		Delete From report_classf Where rpt_classf =#{rpt_classf}
	</delete>

<!-- ** 신고 ** -->
	<!-- 신고 리스트 -->
	<select id="getReport" resultType="reportVo">
		SELECT rpt_no, rpt_post, rpt_classf, rpt_ttl, rpt_cntnt, rpt_date, rpt_mem, rpt_exst 
		FROM report 
		Order by rpt_no
	</select>
	
	<!-- 전체 신고 리스트 개수 -->
	<select id="reportCnt" resultType="int">
		Select count(*) From report
	</select>
	
	<!-- 신고 리스트 검색 결과 -->
	<select id="searchReport" parameterType="pgVo" resultType="reportVo">
		SELECT
		    rnum, rpt_no, rpt_post, rpt_cf_nm, rpt_ttl, rpt_cntnt, rpt_date, rpt_mem, rpt_exst, counts
		FROM
		    (
		        SELECT
		            ROWNUM rnum,
		            a.rpt_no,
		            a.rpt_post,
		            a.rpt_cf_nm,
		            a.rpt_ttl,
		            a.rpt_cntnt,
		            a.rpt_date,
		            a.rpt_mem,
		            a.rpt_exst,
		            count(a.rpt_no) over() counts
		        FROM
		            (
		                SELECT
		                    b.rpt_no,
		                    b.rpt_post,
		                    c.rpt_cf_nm,
		                    b.rpt_ttl,
		                    b.rpt_cntnt,
		                    b.rpt_date,
		                    b.rpt_mem,
		                    b.rpt_exst
				 FROM
                    report b
                    INNER JOIN report_classf c ON ( b.rpt_classf = c.rpt_classf )
                WHERE
                    rpt_no > 0
					<if test="selBox != null and searchNm != null">
						<if test="selBox == 'rpt_no'">
							and rpt_no 		like '%' || #{searchNm} || '%'
						</if>
						<if test="selBox == 'rpt_post'">
							and rpt_post 	like '%' || #{searchNm} || '%' 
						</if>
			            <if test="selBox == 'rpt_cf_nm'">
							and rpt_cf_nm 	like '%' || #{searchNm} || '%' 
						</if>
			            <if test="selBox == 'rpt_ttl'">
							and rpt_ttl 	like '%' || #{searchNm} || '%' 
						</if>
			            <if test="selBox == 'rpt_cntnt'">
							and rpt_cntnt 	like '%' || #{searchNm} || '%' 
						</if>
			             <if test="selBox == 'rpt_mem'">
							and rpt_mem 	like '%' || #{searchNm} || '%' 
						</if>
			             <if test="selBox == 'rpt_exst'">
							and rpt_exst 	like '%' || Upper(#{searchNm}) || '%'
						</if>
						<if test="selBox == 'all'">
							and rpt_no 		like '%' || #{searchNm} || '%'
							or rpt_post 	like '%' || #{searchNm} || '%'
							or rpt_cf_nm 	like '%' || #{searchNm} || '%'
			                or rpt_ttl 		like '%' || #{searchNm} || '%'
			                or rpt_cntnt 	like '%' || #{searchNm} || '%'
			                or rpt_mem 		like '%' || #{searchNm} || '%'
			                or rpt_exst 	like '%' || #{searchNm} || '%'
						</if>
					</if>
				 ORDER BY
	                    rpt_no DESC
	            ) a
		    )
		WHERE
			rnum Between #{page}*#{pageSize}-(#{pageSize}-1) 
	        And #{page}*#{pageSize}
	</select>
		
	<!-- 신고 처리여부 수정 -->
	<update id="updateReport" parameterType="reportVo">
		Update report Set rpt_exst = Upper(#{rpt_exst}) Where rpt_no =#{rpt_no}
	</update>
	
	<!-- 신고 처리가 되면 리뷰는 삭제로 바뀜 -->
	<update id="updatePost">
		Update post Set post_exst = #{post_exst} Where post_no = #{post_no}
	</update>
	
	
	
	
	
</mapper>






















