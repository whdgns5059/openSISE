<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="admin_statis">

<!-- ** 회원 통계 ** -->
	<!-- 누적 회원 수 -->
	<select id="countAllMembers" resultType="int">
		Select count(mem_no) as counts From member Where mem_mngr is null
	</select>
	
	<!-- 현재 가입되어 있는 회원 수 -->
	<select id="countSignIn" resultType="int">
		Select count(mem_no) as counts From member Where mem_exdate is null And mem_mngr is null
	</select>

	<!-- 5일부터 오늘까지 일별 가입한 회원 수 -->
	<select id="signInDaily" resultType="memVo">
		Select count(mem_date) as counts , a.ymd as ymd
		From member right join (
		    Select to_date('20181205', 'yyyyMMdd')+(level-1) as ymd
		    From dual
		    Connect by level <![CDATA[ < ]]>= sysdate - (to_date('20181205', 'yyyyMMdd'))+1) a
		On  (to_char(mem_date, 'YYYY/MM/dd') = a.ymd)
		Where mem_mngr is null
		Group by  a.ymd
		Order by a.ymd
	</select>
	
	<!-- 5일부터 오늘까지 일별 탈퇴한 회원 수 -->
	<select id="signOutDaily" resultType="memVo">
		Select count(mem_exdate) as counts, a.ymd as ymd
		From member right join (
		    select to_date('20181205', 'yyyyMMdd')+(level-1) as ymd
		    from dual
		    connect by level <![CDATA[ < ]]>= sysdate - (to_date('20181205', 'yyyyMMdd'))+1) a
		On  (to_char(mem_date, 'YYYY/MM/dd') = a.ymd)
		Where mem_mngr is null
		Group by  a.ymd
		Order by a.ymd
	</select>
	
	<!-- 2018.11 이후 달별 가입한 회원 수 -->
	<select id="signInMonthly" resultType="memVo">
		Select count(mem_date) as counts , to_char(a.ymd,'YYYY/MM') as ymd
		From member right join (
    	Select add_months(to_date('201811', 'yyyyMM'),(level-1)) as ymd
    	From dual
    	Connect by level <![CDATA[ < ]]>= months_between( add_months(sysdate,1) , to_date('201811', 'yyyyMM'))) a
		On  (to_char(mem_date, 'YYYY/MM') = to_char(a.ymd,'YYYY/MM'))
		Where mem_mngr is null
		Group by  to_char(a.ymd,'YYYY/MM')
		Order by to_char(a.ymd,'YYYY/MM')
	</select>
	
	<!-- 2018.11 이후 달별 탈퇴한 회원 수 -->
	<select id="signOutMonthly" resultType="memVo">
		Select count(mem_exdate) as counts , to_char(a.ymd,'YYYY/MM') as ymd
		From member right join (
    	Select add_months(to_date('201811', 'yyyyMM'),(level-1)) as ymd
    	From dual
    	Connect by level <![CDATA[ < ]]>= months_between( add_months(sysdate,1) , to_date('201811', 'yyyyMM'))) a
		On  (to_char(mem_exdate, 'YYYY/MM') = to_char(a.ymd,'YYYY/MM'))
		Where mem_mngr is null
		Group by  to_char(a.ymd,'YYYY/MM')
		Order by to_char(a.ymd,'YYYY/MM')
	</select>
	
	<!-- 연령별/성별 가입 회원 수 -->
	<select id="signInAgeGndr" resultType="memVo">
		Select count(mem_no) as counts , mem_gndr, mem_age
		From member
		Where mem_gndr is not null
		And  mem_age is not null
		Group by mem_gndr, mem_age
		Order by mem_gndr, mem_age
	</select>
	
<!-- ** 찜 통계 ** -->
	<!-- 개별 찜 받은 개수 -->
	<select id="favorEach" resultType="favorVo">	
		Select favor_gu, favor_dong, favor_zip, favor_rd, counts, bc_nm, 
     	Row_number() Over ( Order by counts desc) as rank
		From (Select count(*) as counts, favor_gu, favor_dong, favor_zip, favor_rd From favorite Group by favor_gu, favor_dong, favor_zip, favor_rd)
		    Inner Join article on (favor_gu = artcl_gu and favor_dong = artcl_dong and favor_zip = artcl_zip and favor_rd = artcl_rd)
		    Inner Join building_classf on ( artcl_bc = bc_no)
		Where Rownum <![CDATA[ < ]]>= 30
	</select>
	
	<!-- 동별 찜 받은 개수 -->
	<select id="favorDong" resultType="favorVo">		
		Select favor_gu, favor_dong, counts, 
		     Row_number() Over ( Order by counts desc) as rank
		From (Select count(*) as counts, favor_gu, favor_dong From favorite Group by favor_gu, favor_dong)
		Where Rownum <![CDATA[ < ]]>= 20
	</select>
	
	<!-- 구별 찜 받은 개수 -->
	<select id="favorGu" resultType="favorVo">	
		Select favor_gu, counts, 
		     Row_number() Over ( Order by counts desc) as rank
		From (Select count(*) as counts, favor_gu From favorite Group by favor_gu)
	</select>
	
<!-- ** 관심사 통계 ** -->
	<!-- 관심사 수 최대치 -->
	<select id="countAllIntrst" resultType="int">
		Select NVL(Max(counts),0) From (Select Count(intrst_no) as counts, intrst_no From mem_inter Group by intrst_no)
	</select>
	
	<!-- 관심사별 선택 수 -->
	<select id="intrstAll" resultType="intrstVo">
		Select count(member.mem_no) counts, interest.intrst_no intrst_no, interest.intrst_nm intrst_nm
		From member Inner join mem_inter On (member.mem_no = mem_inter.mem_no)
		            Right Outer join interest On (mem_inter.intrst_no = interest.intrst_no)
		Group by interest.intrst_no, interest.intrst_nm
		Order by interest.intrst_no
	</select>
	
	<!-- 연령 리스트 -->
	<select id="ageList" resultType="string">
		Select Distinct mem_age From member Where mem_age is not null Order by 1
	</select>
	
	<!-- 연령별/성별+총 관심사 -->
	<select id="intrstAge" parameterType="string" resultType="intrstVo">
		Select Distinct I.INTRST_NO intrst_no
		     , I.INTRST_NM intrst_nm
		     , (Select Count(*) CNT From MEM_INTER MI, MEMBER M 
		     	Where MI.MEM_NO = M.MEM_NO And INTRST_NO = I.INTRST_NO And MEM_GNDR = 'F' 
		     	<if test="value != null">
		     		And mem_age = #{mem_age}
		     	</if>
		     	) female
		     , (Select Count(*) CNT From MEM_INTER MI, MEMBER M 
		     	Where MI.MEM_NO = M.MEM_NO And INTRST_NO = I.INTRST_NO And MEM_GNDR = 'M' 
		     	<if test="value != null">
		     		And mem_age = #{mem_age}
		     	</if>
		     	) male
		     , (Select Count(*) CNT From MEM_INTER MI, MEMBER M 
		     	Where MI.MEM_NO = M.MEM_NO And INTRST_NO = I.INTRST_NO 
		     	<if test="value != null">
		     		And mem_age = #{mem_age}
		     	</if>
		     	) counts
		From   INTEREST I
		Order by intrst_no
	</select>
	
<!-- ** 방문자 통계 ** -->
	<!-- 사이트 방문 데이터 입력 -->
	<insert id="insertVisitor" >
		Insert Into visitor Values (sysdate)
	</insert>
	
	<!-- 가장 많이 방문한 수 -->
	<select id="maxVisit" resultType="visitVo">
		SELECT counts, ymd
		FROM (
		        SELECT COUNT(vstr_date) AS counts, TO_CHAR(vstr_date,'YYYY/MM/dd') ymd
		        FROM visitor
		        GROUP BY TO_CHAR(vstr_date,'YYYY/MM/dd')
		        ORDER BY counts desc
		    )
		WHERE ROWNUM = 1
	</select>
	
	<!-- 날짜별 방문 수 -->
	<select id="visitDate" resultType="visitVo">
		Select count(vstr_date) as counts , (Select Round(date_to_unix_ts(a.ymd)) From dual) as ymd
		From visitor Right Join (
		    Select to_date('20181205', 'yyyyMMdd')+(level-1) as ymd
		    From dual
		    Connect by level <![CDATA[ < ]]>= sysdate - (to_date('20181205', 'yyyyMMdd'))+1) a
		On  (to_char(vstr_date, 'YYYY/MM/dd') = a.ymd)
		Group by  a.ymd
		Order by a.ymd
	</select>
	
	<!-- 요일별/시간별 방문 수 -->
	<select id="visitDay" resultType="visitVo">
		SELECT * FROM VW_VISITOR_DY
		<!-- Select count(vstr_date) as counts, a.dy dy
		From visitor Right Join (
		    Select to_date('20181206', 'yyyyMMdd')+(level-1) as ymd,
		           to_char(to_date('20181206', 'yyyyMMdd')+(level-1), 'D') d,
		           to_char(to_date('20181206', 'yyyyMMdd')+(level-1), 'DY') dy
		    From dual
		    Connect by level <![CDATA[ < ]]>= sysdate - (to_date('20181206', 'yyyyMMdd'))+1) a
		On  (to_char(vstr_date, 'YYYY/MM/dd') = a.ymd)
		Group by a.d, a.dy
		Order by a.d -->
	</select>
	
	<!-- 방문이 많은 요일 순위별 -->
	<select id="maxVisitDay" resultType="visitVo">
		SELECT Sum(counts) counts, dy FROM VW_VISITOR_DY Group by dy Order by counts desc
	</select>
	
	<!-- 시간별 방문 수 -->
	<select id="visitHour" resultType="visitVo">
		Select * From visitor
	</select>
	
<!-- ** 페이지 통계 ** -->
	<!-- 페이지 방문 데이터 입력 -->
	<insert id="insertPS" parameterType="map">
		Insert All 
		<foreach collection="_parameter.entrySet()" item="vo" separator=" ">
			Into page_statistic (ps_date, ps_pg, ps_pg_addr, ps_vstr)
			Values (sysdate, #{vo.ps_pg}, #{vo.ps_pg_addr}, #{vo.ps_vstr})
		</foreach>
		Select * From Dual
	</insert>
	
	<!-- 모든 페이지 종류 -->
	<select id="pageCount" resultType="string">
		Select Distinct ps_pg From page_statistic Order by ps_pg
	</select>
	
	<!-- 가장 많은 페이지 방문 수  -->
	<select id="pageMax" resultType="psVo">
		Select a.ps_vstr ps_vstr, a.ps_pg ps_pg
		From (Select Sum(ps_vstr) ps_vstr, ps_pg From page_statistic Group by ps_pg Order by 1 desc) a
		Where Rownum = 1
	</select>
	
	<!-- 일별 페이지 방문 수 -->
	<select id="psDate" parameterType="psVo" resultType="psVo">
		Select Distinct fn_psDate(to_char(ps_date,'YY/MM/DD') ) ps_pgList 
		     , Round(date_to_unix_ts(to_char(ps_date,'YYYYMMDD'))) ps_dateStr
		From   page_statistic
		<if test="from != null and to != null">
		Where  to_char(ps_date,'YYYY-MM-DD') Between #{from} And #{to}
		</if>
		Order by 2
	</select>
	
	<!-- 페이지별 페이지 방문 수 -->
	<select id="psPage" resultType="psVo">
		Select ps_pg, ps_pg_addr, Sum(ps_vstr) ps_vstr
		From page_statistic
		Group by  ps_pg, ps_pg_addr
		Order by ps_pg
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
<!-- dummyData 연령대 추가 -->
	<insert id="test" parameterType="memVo">
		Update member Set mem_age=#{mem_age} Where mem_no=#{mem_no}
	</insert>
	
	
	
</mapper>






















