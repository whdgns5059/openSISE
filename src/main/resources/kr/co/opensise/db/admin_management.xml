<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="admin">

	<!-- 회원 리스트 출력 -->
	<select id="memberList" resultType="managementVo" >
		select m.mem_no, m.mem_nm, m.mem_email, m.mem_date, m.mem_age, m.mem_exdate, m.mem_gndr, j.job_nm, m.mem_lvl, z.nm
		from member m join job j on(m.mem_job = j.job_no)
		left outer join (select m.mem_no
            , substr(xmlagg(xmlelement(col,',',i.intrst_nm) order by i.intrst_nm).extract('//text()').getstringval(),2) nm
		from  mem_inter m, interest i
		where  m.intrst_no = i.intrst_no
		group by m.mem_no) z on(m.mem_no = z.mem_no)
	</select>
	
	<!-- 회원리스트 페이징처리 -->
	<select id="selectUsrPageList" parameterType="pageVo" resultType="managementVo">
		select * from(
		select rownum rnum ,a.*
		from
		(select m.mem_no, m.mem_nm, m.mem_email, m.mem_date, m.mem_age, m.mem_exdate, m.mem_gndr, j.job_nm, m.mem_lvl, z.nm
		from member m join job j on(m.mem_job = j.job_no)
		left outer join (select m.mem_no
            , substr(xmlagg(xmlelement(col,',',i.intrst_nm) order by i.intrst_nm).extract('//text()').getstringval(),2) nm
		from  mem_inter m, interest i
		where  m.intrst_no = i.intrst_no
		group by m.mem_no) z on(m.mem_no = z.mem_no)
		order by mem_nm) a)
		where rnum between #{page}*#{pageSize}-(#{pageSize}-1) 
        and #{page}*#{pageSize}
	</select>
	
	<!-- 회원 전체건수 -->
	<select id="getUserCnt" resultType="int">
		select count(*) from member
	</select>
	
	
	<!-- 회원 검색조건 -->
	<select id="selectMember" parameterType="map" resultType="managementVo">
		select * from member
		where mem_no = #{mem_no}
		or mem_email = #{mem_email}
		or mem_nm = #{mem_nm}
	</select>
</mapper>






















