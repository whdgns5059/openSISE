 
SELECT  'DROP TABLE ' || object_name || ' CASCADE CONSTRAINTS;'
  FROM    user_objects
WHERE   object_type = 'TABLE';

DROP TABLE BUS CASCADE CONSTRAINTS;
DROP TABLE MEMBER CASCADE CONSTRAINTS;
DROP TABLE BLACKLIST CASCADE CONSTRAINTS;
DROP TABLE BOARD CASCADE CONSTRAINTS;
DROP TABLE POST CASCADE CONSTRAINTS;
DROP TABLE REPLY CASCADE CONSTRAINTS;
DROP TABLE REPORT CASCADE CONSTRAINTS;
DROP TABLE PICTURE CASCADE CONSTRAINTS;
DROP TABLE ADVERTISEMENT CASCADE CONSTRAINTS;
DROP TABLE PAGE_STATISTIC CASCADE CONSTRAINTS;
DROP TABLE BUILDING_CLASSF CASCADE CONSTRAINTS;
DROP TABLE FAVORITE CASCADE CONSTRAINTS;
DROP TABLE DEAL CASCADE CONSTRAINTS;
DROP TABLE ARTICLE CASCADE CONSTRAINTS;
DROP TABLE MARKET CASCADE CONSTRAINTS;
DROP TABLE HUMAN_STATISTIC CASCADE CONSTRAINTS;
DROP TABLE MARKET_DETAIL CASCADE CONSTRAINTS;
DROP TABLE INSTI_ATTR CASCADE CONSTRAINTS;
DROP TABLE INSTI CASCADE CONSTRAINTS;
DROP TABLE STATION CASCADE CONSTRAINTS;
DROP TABLE INTEREST CASCADE CONSTRAINTS;
DROP TABLE JOB CASCADE CONSTRAINTS;
DROP TABLE BAN CASCADE CONSTRAINTS;
DROP TABLE MEM_INTER CASCADE CONSTRAINTS;
DROP TABLE VISITOR CASCADE CONSTRAINTS;
DROP TABLE ROUTE CASCADE CONSTRAINTS;
DROP TABLE ERR$_ARTICLE CASCADE CONSTRAINTS;
DROP TABLE ERR$_STATION CASCADE CONSTRAINTS;


/* 회원 */
CREATE TABLE MEMBER (
	MEM_NO NUMBER NOT NULL, /* 회원번호 */
	MEM_EMAIL VARCHAR2(40), /* 이메일 */
	MEM_PASS VARCHAR2(255), /* 비밀번호 */
	MEM_NM VARCHAR2(50), /* 이름 */
	MEM_JOB NUMBER, /* 직장번호 */
	MEM_GNDR CHAR(1), /* 성별 */
	MEM_MNGR CHAR(1), /* 관리자 */
	MEM_DATE DATE, /* 가입일자 */
	MEM_EXDATE DATE, /* 탈퇴일자 */
	MEM_LVL NUMBER, /* 신고레벨 */
	MEM_LDATE DATE, /* 신고날짜 */
	MEM_AGE VARCHAR2(15) /* 연령대 */
);

COMMENT ON TABLE MEMBER IS '회원';

COMMENT ON COLUMN MEMBER.MEM_NO IS '회원번호';

COMMENT ON COLUMN MEMBER.MEM_EMAIL IS '이메일';

COMMENT ON COLUMN MEMBER.MEM_PASS IS '비밀번호';

COMMENT ON COLUMN MEMBER.MEM_NM IS '이름';

COMMENT ON COLUMN MEMBER.MEM_JOB IS '직장번호';

COMMENT ON COLUMN MEMBER.MEM_GNDR IS '성별';

COMMENT ON COLUMN MEMBER.MEM_MNGR IS '관리자';

COMMENT ON COLUMN MEMBER.MEM_DATE IS '가입일자';

COMMENT ON COLUMN MEMBER.MEM_EXDATE IS '탈퇴일자';

COMMENT ON COLUMN MEMBER.MEM_LVL IS '신고레벨';

COMMENT ON COLUMN MEMBER.MEM_LDATE IS '신고날짜';

COMMENT ON COLUMN MEMBER.MEM_AGE IS '연령대';

CREATE UNIQUE INDEX PK_MEMBER
	ON MEMBER (
		MEM_NO ASC
	);

ALTER TABLE MEMBER
	ADD
		CONSTRAINT PK_MEMBER
		PRIMARY KEY (
			MEM_NO
		);

/* 블랙리스트 */
CREATE TABLE BLACKLIST (
	BLK_NO NUMBER NOT NULL, /* 블랙리스트번호 */
	BLK_MEM NUMBER NOT NULL, /* 회원번호 */
	BLK_DATE DATE, /* 지정일시 */
	BLK_REASON CLOB /* 사유 */
);

COMMENT ON TABLE BLACKLIST IS '블랙리스트';

COMMENT ON COLUMN BLACKLIST.BLK_NO IS '블랙리스트번호';

COMMENT ON COLUMN BLACKLIST.BLK_MEM IS '회원번호';

COMMENT ON COLUMN BLACKLIST.BLK_DATE IS '지정일시';

COMMENT ON COLUMN BLACKLIST.BLK_REASON IS '사유';

CREATE UNIQUE INDEX PK_BLACKLIST
	ON BLACKLIST (
		BLK_NO ASC
	);

ALTER TABLE BLACKLIST
	ADD
		CONSTRAINT PK_BLACKLIST
		PRIMARY KEY (
			BLK_NO
		);

/* 게시판 */
CREATE TABLE BOARD (
	BRD_NO NUMBER NOT NULL, /* 게시판번호 */
	BRD_NM VARCHAR2(50) NOT NULL /* 게시판명 */
);

COMMENT ON TABLE BOARD IS '게시판';

COMMENT ON COLUMN BOARD.BRD_NO IS '게시판번호';

COMMENT ON COLUMN BOARD.BRD_NM IS '게시판명';

CREATE UNIQUE INDEX PK_BOARD
	ON BOARD (
		BRD_NO ASC
	);

ALTER TABLE BOARD
	ADD
		CONSTRAINT PK_BOARD
		PRIMARY KEY (
			BRD_NO
		);

/* 게시글 */
CREATE TABLE POST (
	POST_NO NUMBER NOT NULL, /* 게시글번호 */
	POST_BRD NUMBER NOT NULL, /* 게시판번호 */
	POST_MEM NUMBER NOT NULL, /* 회원번호 */
	POST_TTL VARCHAR2(100), /* 제목 */
	POST_CNTNT CLOB, /* 내용 */
	POST_DATE DATE, /* 일자 */
	POST_STAR CHAR(1), /* 별점 */
	POST_EXST CHAR(1), /* 삭제여부 */
	POST_GU VARCHAR2(20), /* 구 */
	POST_DONG VARCHAR2(50), /* 동 */
	POST_ZIP VARCHAR2(10), /* 지번 */
	POST_RD VARCHAR2(200) /* 도로명 */
);

COMMENT ON TABLE POST IS '게시글';

COMMENT ON COLUMN POST.POST_NO IS '게시글번호';

COMMENT ON COLUMN POST.POST_BRD IS '게시판번호';

COMMENT ON COLUMN POST.POST_MEM IS '회원번호';

COMMENT ON COLUMN POST.POST_TTL IS '제목';

COMMENT ON COLUMN POST.POST_CNTNT IS '내용';

COMMENT ON COLUMN POST.POST_DATE IS '일자';

COMMENT ON COLUMN POST.POST_STAR IS '별점';

COMMENT ON COLUMN POST.POST_EXST IS '삭제여부';

COMMENT ON COLUMN POST.POST_GU IS '구';

COMMENT ON COLUMN POST.POST_DONG IS '동';

COMMENT ON COLUMN POST.POST_ZIP IS '지번';

COMMENT ON COLUMN POST.POST_RD IS '도로명';

CREATE UNIQUE INDEX PK_POST
	ON POST (
		POST_NO ASC
	);

ALTER TABLE POST
	ADD
		CONSTRAINT PK_POST
		PRIMARY KEY (
			POST_NO
		);

/* 댓글 */
CREATE TABLE REPLY (
	RPL_NO NUMBER NOT NULL, /* 댓글번호 */
	RPL_CNTNT CLOB, /* 내용 */
	RPL_DATE DATE, /* 작성일 */
	RPL_EXST CHAR(1), /* 삭제여부 */
	RPL_POST NUMBER NOT NULL, /* 게시글번호 */
	RPL_MEM NUMBER NOT NULL /* 회원번호 */
);

COMMENT ON TABLE REPLY IS '댓글';

COMMENT ON COLUMN REPLY.RPL_NO IS '댓글번호';

COMMENT ON COLUMN REPLY.RPL_CNTNT IS '내용';

COMMENT ON COLUMN REPLY.RPL_DATE IS '작성일';

COMMENT ON COLUMN REPLY.RPL_EXST IS '삭제여부';

COMMENT ON COLUMN REPLY.RPL_POST IS '게시글번호';

COMMENT ON COLUMN REPLY.RPL_MEM IS '회원번호';

CREATE UNIQUE INDEX PK_REPLY
	ON REPLY (
		RPL_NO ASC
	);

ALTER TABLE REPLY
	ADD
		CONSTRAINT PK_REPLY
		PRIMARY KEY (
			RPL_NO
		);

/* 신고 */
CREATE TABLE REPORT (
	RPT_NO NUMBER NOT NULL, /* 신고번호 */
	RPT_POST NUMBER NOT NULL, /* 게시글번호 */
	RPT_CNTNT CLOB, /* 내용 */
	RPT_DATE DATE NOT NULL, /* 일자 */
	RPT_CLASSF CHAR(1), /* 신고분류 */
	RPT_MEM NUMBER NOT NULL /* 회원번호 */
);

COMMENT ON TABLE REPORT IS '신고';

COMMENT ON COLUMN REPORT.RPT_NO IS '신고번호';

COMMENT ON COLUMN REPORT.RPT_POST IS '게시글번호';

COMMENT ON COLUMN REPORT.RPT_CNTNT IS '내용';

COMMENT ON COLUMN REPORT.RPT_DATE IS '일자';

COMMENT ON COLUMN REPORT.RPT_CLASSF IS '신고분류';

COMMENT ON COLUMN REPORT.RPT_MEM IS '회원번호';

CREATE UNIQUE INDEX PK_REPORT
	ON REPORT (
		RPT_NO ASC
	);

ALTER TABLE REPORT
	ADD
		CONSTRAINT PK_REPORT
		PRIMARY KEY (
			RPT_NO
		);

/* 사진 */
CREATE TABLE PICTURE (
	PIC_NO NUMBER NOT NULL, /* 사진번호 */
	PIC_FILE_NM VARCHAR2(300), /* 파일명 */
	PIC_FILE_PATH VARCHAR2(300), /* 경로명 */
	PIC_UUID VARCHAR2(100), /* UUID */
	PIC_POST NUMBER NOT NULL /* 게시글번호 */
);

COMMENT ON TABLE PICTURE IS '사진';

COMMENT ON COLUMN PICTURE.PIC_NO IS '사진번호';

COMMENT ON COLUMN PICTURE.PIC_FILE_NM IS '파일명';

COMMENT ON COLUMN PICTURE.PIC_FILE_PATH IS '경로명';

COMMENT ON COLUMN PICTURE.PIC_UUID IS 'UUID';

COMMENT ON COLUMN PICTURE.PIC_POST IS '게시글번호';

CREATE UNIQUE INDEX PK_PICTURE
	ON PICTURE (
		PIC_NO ASC
	);

ALTER TABLE PICTURE
	ADD
		CONSTRAINT PK_PICTURE
		PRIMARY KEY (
			PIC_NO
		);

/* 광고 */
CREATE TABLE ADVERTISEMENT (
	AD_NO NUMBER NOT NULL, /* 광고번호 */
	AD_MEM NUMBER, /* 회원번호 */
	AD_FILE_NM VARCHAR2(300), /* 파일명 */
	AD_FILE_PATH VARCHAR2(300), /* 경로명 */
	AD_UUID VARCHAR2(100) /* UUID */
);

COMMENT ON TABLE ADVERTISEMENT IS '광고';

COMMENT ON COLUMN ADVERTISEMENT.AD_NO IS '광고번호';

COMMENT ON COLUMN ADVERTISEMENT.AD_MEM IS '회원번호';

COMMENT ON COLUMN ADVERTISEMENT.AD_FILE_NM IS '파일명';

COMMENT ON COLUMN ADVERTISEMENT.AD_FILE_PATH IS '경로명';

COMMENT ON COLUMN ADVERTISEMENT.AD_UUID IS 'UUID';

CREATE UNIQUE INDEX PK_ADVERTISEMENT
	ON ADVERTISEMENT (
		AD_NO ASC
	);

ALTER TABLE ADVERTISEMENT
	ADD
		CONSTRAINT PK_ADVERTISEMENT
		PRIMARY KEY (
			AD_NO
		);

/* 페이지통계 */
CREATE TABLE PAGE_STATISTIC (
	PS_DATE DATE NOT NULL, /* 일시 */
	PS_PG VARCHAR2(300) NOT NULL, /* 페이지명 */
	PS_PG_ADDR VARCHAR2(300), /* 페이지주소 */
	PS_VSTR NUMBER /* 방문수 */
);

COMMENT ON TABLE PAGE_STATISTIC IS '페이지통계';

COMMENT ON COLUMN PAGE_STATISTIC.PS_DATE IS '일시';

COMMENT ON COLUMN PAGE_STATISTIC.PS_PG IS '페이지명';

COMMENT ON COLUMN PAGE_STATISTIC.PS_PG_ADDR IS '페이지주소';

COMMENT ON COLUMN PAGE_STATISTIC.PS_VSTR IS '방문수';

CREATE UNIQUE INDEX PK_PAGE_STATISTIC
	ON PAGE_STATISTIC (
		PS_DATE ASC,
		PS_PG ASC
	);

ALTER TABLE PAGE_STATISTIC
	ADD
		CONSTRAINT PK_PAGE_STATISTIC
		PRIMARY KEY (
			PS_DATE,
			PS_PG
		);

/* 건물분류 */
CREATE TABLE BUILDING_CLASSF (
	BC_NO VARCHAR2(20) NOT NULL, /* 건물분류번호 */
	BC_NM VARCHAR2(20) NOT NULL /* 건물분류명 */
);

COMMENT ON TABLE BUILDING_CLASSF IS '건물분류';

COMMENT ON COLUMN BUILDING_CLASSF.BC_NO IS '건물분류번호';

COMMENT ON COLUMN BUILDING_CLASSF.BC_NM IS '건물분류명';

CREATE UNIQUE INDEX PK_BUILDING_CLASSF
	ON BUILDING_CLASSF (
		BC_NO ASC
	);

ALTER TABLE BUILDING_CLASSF
	ADD
		CONSTRAINT PK_BUILDING_CLASSF
		PRIMARY KEY (
			BC_NO
		);

/* 찜 */
CREATE TABLE FAVORITE (
	FAVOR_NO NUMBER NOT NULL, /* 찜번호 */
	FAVOR_MEM NUMBER NOT NULL, /* 회원번호 */
	FAVOR_GU VARCHAR2(20), /* 구 */
	FAVOR_DONG VARCHAR2(50), /* 동 */
	FAVOR_ZIP VARCHAR2(10), /* 지번 */
	FAVOR_RD VARCHAR2(200), /* 도로명 */
	FAVOR_TY VARCHAR2(20) /* 거래유형 */
);

COMMENT ON TABLE FAVORITE IS '찜';

COMMENT ON COLUMN FAVORITE.FAVOR_NO IS '찜번호';

COMMENT ON COLUMN FAVORITE.FAVOR_MEM IS '회원번호';

COMMENT ON COLUMN FAVORITE.FAVOR_GU IS '구';

COMMENT ON COLUMN FAVORITE.FAVOR_DONG IS '동';

COMMENT ON COLUMN FAVORITE.FAVOR_ZIP IS '지번';

COMMENT ON COLUMN FAVORITE.FAVOR_RD IS '도로명';

COMMENT ON COLUMN FAVORITE.FAVOR_TY IS '거래유형';

CREATE UNIQUE INDEX PK_FAVORITE
	ON FAVORITE (
		FAVOR_NO ASC
	);

ALTER TABLE FAVORITE
	ADD
		CONSTRAINT PK_FAVORITE
		PRIMARY KEY (
			FAVOR_NO
		);

/* 거래내역 */
CREATE TABLE DEAL (
	DL_NO NUMBER NOT NULL, /* 거래번호 */
	DL_GU VARCHAR2(20), /* 구 */
	DL_DONG VARCHAR2(50), /* 동 */
	DL_ZIP VARCHAR2(10), /* 지번 */
	DL_RD VARCHAR2(200), /* 도로명 */
	DL_EXCV_AREA NUMBER, /* 전용면적 */
	DL_TY VARCHAR2(20), /* 거래유형 */
	DL_PRICE NUMBER NOT NULL, /* 거래금액 */
	DL_DEPOS NUMBER, /* 보증금 */
	DL_RNT NUMBER, /* 월세 */
	DL_CONT_YM VARCHAR2(10), /* 계약년월 */
	DL_CONT_D VARCHAR2(10), /* 계약일 */
	DL_FLR CHAR(3) /* 층 */
);

COMMENT ON TABLE DEAL IS '거래내역';

COMMENT ON COLUMN DEAL.DL_NO IS '거래번호';

COMMENT ON COLUMN DEAL.DL_GU IS '구';

COMMENT ON COLUMN DEAL.DL_DONG IS '동';

COMMENT ON COLUMN DEAL.DL_ZIP IS '지번';

COMMENT ON COLUMN DEAL.DL_RD IS '도로명';

COMMENT ON COLUMN DEAL.DL_EXCV_AREA IS '전용면적';

COMMENT ON COLUMN DEAL.DL_TY IS '거래유형';

COMMENT ON COLUMN DEAL.DL_PRICE IS '거래금액';

COMMENT ON COLUMN DEAL.DL_DEPOS IS '보증금';

COMMENT ON COLUMN DEAL.DL_RNT IS '월세';

COMMENT ON COLUMN DEAL.DL_CONT_YM IS '계약년월';

COMMENT ON COLUMN DEAL.DL_CONT_D IS '계약일';

COMMENT ON COLUMN DEAL.DL_FLR IS '층';

CREATE UNIQUE INDEX PK_DEAL
	ON DEAL (
		DL_NO ASC
	);

ALTER TABLE DEAL
	ADD
		CONSTRAINT PK_DEAL
		PRIMARY KEY (
			DL_NO
		);

/* 건물 */
CREATE TABLE ARTICLE (
	ARTCL_GU VARCHAR2(20) NOT NULL, /* 구 */
	ARTCL_DONG VARCHAR2(50) NOT NULL, /* 동 */
	ARTCL_ZIP VARCHAR2(10) NOT NULL, /* 지번 */
	ARTCL_RD VARCHAR2(200) NOT NULL, /* 도로명 */
	ARTCL_BC VARCHAR2(20) NOT NULL, /* 건물분류번호 */
	ARTCL_COMPLX VARCHAR2(50), /* 단지명 */
	ARTCL_NM VARCHAR2(100), /* 건물명 */
	ARTCL_TY VARCHAR2(20), /* 유형 */
	ARTCL_PRPS_PLS VARCHAR2(30), /* 용도지역 */
	ARTCL_MN_PRPS VARCHAR2(30), /* 주용도 */
	ARTCL_CONST_Y VARCHAR2(10), /* 건축년도 */
	ARTCL_RD_DETAIL VARCHAR2(200), /* 도로명상세 */
	ARTCL_LAT VARCHAR2(50), /* 위도 */
	ARTCL_LNG VARCHAR2(50) /* 경도 */
);

COMMENT ON TABLE ARTICLE IS '건물';

COMMENT ON COLUMN ARTICLE.ARTCL_GU IS '구';

COMMENT ON COLUMN ARTICLE.ARTCL_DONG IS '동';

COMMENT ON COLUMN ARTICLE.ARTCL_ZIP IS '지번';

COMMENT ON COLUMN ARTICLE.ARTCL_RD IS '도로명';

COMMENT ON COLUMN ARTICLE.ARTCL_BC IS '건물분류번호';

COMMENT ON COLUMN ARTICLE.ARTCL_COMPLX IS '단지명';

COMMENT ON COLUMN ARTICLE.ARTCL_NM IS '건물명';

COMMENT ON COLUMN ARTICLE.ARTCL_TY IS '유형';

COMMENT ON COLUMN ARTICLE.ARTCL_PRPS_PLS IS '용도지역';

COMMENT ON COLUMN ARTICLE.ARTCL_MN_PRPS IS '주용도';

COMMENT ON COLUMN ARTICLE.ARTCL_CONST_Y IS '건축년도';

COMMENT ON COLUMN ARTICLE.ARTCL_RD_DETAIL IS '도로명상세';

COMMENT ON COLUMN ARTICLE.ARTCL_LAT IS '위도';

COMMENT ON COLUMN ARTICLE.ARTCL_LNG IS '경도';

CREATE UNIQUE INDEX PK_ARTICLE
	ON ARTICLE (
		ARTCL_GU ASC,
		ARTCL_DONG ASC,
		ARTCL_ZIP ASC,
		ARTCL_RD ASC
	);

ALTER TABLE ARTICLE
	ADD
		CONSTRAINT PK_ARTICLE
		PRIMARY KEY (
			ARTCL_GU,
			ARTCL_DONG,
			ARTCL_ZIP,
			ARTCL_RD
		);

/* 물가 */
CREATE TABLE MARKET (
	MK_NM VARCHAR2(40) NOT NULL, /* 시장명 */
	MK_DONG VARCHAR2(50) NOT NULL, /* 동 */
	MK_CLASSF VARCHAR2(20) /* 시장분류 */
);

COMMENT ON TABLE MARKET IS '물가';

COMMENT ON COLUMN MARKET.MK_NM IS '시장명';

COMMENT ON COLUMN MARKET.MK_DONG IS '동';

COMMENT ON COLUMN MARKET.MK_CLASSF IS '시장분류';

CREATE UNIQUE INDEX PK_MARKET
	ON MARKET (
		MK_NM ASC,
		MK_DONG ASC
	);

ALTER TABLE MARKET
	ADD
		CONSTRAINT PK_MARKET
		PRIMARY KEY (
			MK_NM,
			MK_DONG
		);

/* 인구통계 */
CREATE TABLE HUMAN_STATISTIC (
	HS_DONG VARCHAR2(50) NOT NULL, /* 동 */
	HS_GNDR CHAR(1) NOT NULL, /* 성별 */
	HS_AGE_GRP VARCHAR2(15) NOT NULL, /* 연령대 */
	HS_DATE VARCHAR2(6) NOT NULL, /* 조사시기 */
	HS_HM_NO NUMBER /* 인구수 */
);

COMMENT ON TABLE HUMAN_STATISTIC IS '인구통계';

COMMENT ON COLUMN HUMAN_STATISTIC.HS_DONG IS '동';

COMMENT ON COLUMN HUMAN_STATISTIC.HS_GNDR IS '성별';

COMMENT ON COLUMN HUMAN_STATISTIC.HS_AGE_GRP IS '연령대';

COMMENT ON COLUMN HUMAN_STATISTIC.HS_DATE IS '조사시기';

COMMENT ON COLUMN HUMAN_STATISTIC.HS_HM_NO IS '인구수';

CREATE UNIQUE INDEX PK_HUMAN_STATISTIC
	ON HUMAN_STATISTIC (
		HS_DONG ASC,
		HS_GNDR ASC,
		HS_AGE_GRP ASC,
		HS_DATE ASC
	);

ALTER TABLE HUMAN_STATISTIC
	ADD
		CONSTRAINT PK_HUMAN_STATISTIC
		PRIMARY KEY (
			HS_DONG,
			HS_GNDR,
			HS_AGE_GRP,
			HS_DATE
		);

/* 물가상세 */
CREATE TABLE MARKET_DETAIL (
	MKD_NO NUMBER NOT NULL, /* 물가번호 */
	MKD_MK VARCHAR2(40) NOT NULL, /* 시장명 */
	MKD_MK_DONG VARCHAR2(50) NOT NULL, /* 동 */
	MKD_DATE VARCHAR2(6), /* 조사일시 */
	MKD_PRICE NUMBER, /* 가격 */
	MKD_PROD VARCHAR2(20), /* 품목분류 */
	MKD_PROD_DETAIL VARCHAR2(40) /* 품목상세 */
);

COMMENT ON TABLE MARKET_DETAIL IS '물가상세';

COMMENT ON COLUMN MARKET_DETAIL.MKD_NO IS '물가번호';

COMMENT ON COLUMN MARKET_DETAIL.MKD_MK IS '시장명';

COMMENT ON COLUMN MARKET_DETAIL.MKD_MK_DONG IS '동';

COMMENT ON COLUMN MARKET_DETAIL.MKD_DATE IS '조사일시';

COMMENT ON COLUMN MARKET_DETAIL.MKD_PRICE IS '가격';

COMMENT ON COLUMN MARKET_DETAIL.MKD_PROD IS '품목분류';

COMMENT ON COLUMN MARKET_DETAIL.MKD_PROD_DETAIL IS '품목상세';

CREATE UNIQUE INDEX PK_MARKET_DETAIL
	ON MARKET_DETAIL (
		MKD_NO ASC
	);

ALTER TABLE MARKET_DETAIL
	ADD
		CONSTRAINT PK_MARKET_DETAIL
		PRIMARY KEY (
			MKD_NO
		);

/* 시설속성 */
CREATE TABLE INSTI_ATTR (
	IATTR_NO NUMBER NOT NULL, /* 속성번호 */
	IATTR_INSTI NUMBER NOT NULL, /* 시설번호 */
	IATTR_PARE NUMBER, /* 시설번호참조 */
	IATTR_KEY VARCHAR2(100) NOT NULL, /* 속성명 */
	IATTR_VAL VARCHAR2(500) /* 속성값 */
);

COMMENT ON TABLE INSTI_ATTR IS '시설속성';

COMMENT ON COLUMN INSTI_ATTR.IATTR_NO IS '속성번호';

COMMENT ON COLUMN INSTI_ATTR.IATTR_INSTI IS '시설번호';

COMMENT ON COLUMN INSTI_ATTR.IATTR_PARE IS '시설번호참조';

COMMENT ON COLUMN INSTI_ATTR.IATTR_KEY IS '속성명';

COMMENT ON COLUMN INSTI_ATTR.IATTR_VAL IS '속성값';

CREATE UNIQUE INDEX PK_INSTI_ATTR
	ON INSTI_ATTR (
		IATTR_NO ASC
	);

ALTER TABLE INSTI_ATTR
	ADD
		CONSTRAINT PK_INSTI_ATTR
		PRIMARY KEY (
			IATTR_NO
		);

/* 시설 */
CREATE TABLE INSTI (
	INSTI_NO NUMBER NOT NULL, /* 시설번호 */
	INSTI_NM VARCHAR2(100) NOT NULL /* 시설명 */
);

COMMENT ON TABLE INSTI IS '시설';

COMMENT ON COLUMN INSTI.INSTI_NO IS '시설번호';

COMMENT ON COLUMN INSTI.INSTI_NM IS '시설명';

CREATE UNIQUE INDEX PK_INSTI
	ON INSTI (
		INSTI_NO ASC
	);

ALTER TABLE INSTI
	ADD
		CONSTRAINT PK_INSTI
		PRIMARY KEY (
			INSTI_NO
		);

/* 정류소 */
CREATE TABLE STATION (
	STTN_ID VARCHAR2(10) NOT NULL, /* 정류소ID */
	STTN_NM VARCHAR2(30) NOT NULL, /* 정류소명 */
	STTN_LAT VARCHAR2(50), /* 위도 */
	STTN_LNG VARCHAR2(50) /* 경도 */
);

COMMENT ON TABLE STATION IS '정류소';

COMMENT ON COLUMN STATION.STTN_ID IS '정류소ID';

COMMENT ON COLUMN STATION.STTN_NM IS '정류소명';

COMMENT ON COLUMN STATION.STTN_LAT IS '위도';

COMMENT ON COLUMN STATION.STTN_LNG IS '경도';

CREATE UNIQUE INDEX PK_STATION
	ON STATION (
		STTN_ID ASC
	);

ALTER TABLE STATION
	ADD
		CONSTRAINT PK_STATION
		PRIMARY KEY (
			STTN_ID
		);

/* 관심사 */
CREATE TABLE INTEREST (
	INTRST_NO NUMBER NOT NULL, /* 관심사번호 */
	INTRST_NM VARCHAR2(200) /* 관심사명 */
);

COMMENT ON TABLE INTEREST IS '관심사';

COMMENT ON COLUMN INTEREST.INTRST_NO IS '관심사번호';

COMMENT ON COLUMN INTEREST.INTRST_NM IS '관심사명';

CREATE UNIQUE INDEX PK_INTEREST
	ON INTEREST (
		INTRST_NO ASC
	);

ALTER TABLE INTEREST
	ADD
		CONSTRAINT PK_INTEREST
		PRIMARY KEY (
			INTRST_NO
		);

/* 직장 */
CREATE TABLE JOB (
	JOB_NO NUMBER NOT NULL, /* 직장번호 */
	JOB_NM VARCHAR2(200) /* 직장명 */
);

COMMENT ON TABLE JOB IS '직장';

COMMENT ON COLUMN JOB.JOB_NO IS '직장번호';

COMMENT ON COLUMN JOB.JOB_NM IS '직장명';

CREATE UNIQUE INDEX PK_JOB
	ON JOB (
		JOB_NO ASC
	);

ALTER TABLE JOB
	ADD
		CONSTRAINT PK_JOB
		PRIMARY KEY (
			JOB_NO
		);

/* 버스 */
CREATE TABLE BUS (
	BUS_CD VARCHAR2(10) NOT NULL, /* 버스CD */
	BUS_NO VARCHAR2(10), /* 버스번호 */
	BUS_TP VARCHAR2(10) /* 버스구분 */
);

COMMENT ON TABLE BUS IS '버스';

COMMENT ON COLUMN BUS.BUS_CD IS '버스CD';

COMMENT ON COLUMN BUS.BUS_NO IS '버스번호';

COMMENT ON COLUMN BUS.BUS_TP IS '버스구분';

CREATE UNIQUE INDEX PK_BUS
	ON BUS (
		BUS_CD ASC
	);

ALTER TABLE BUS
	ADD
		CONSTRAINT PK_BUS
		PRIMARY KEY (
			BUS_CD
		);

/* 금지어관리 */
CREATE TABLE BAN (
	BAN_NO NUMBER NOT NULL, /* 금지어번호 */
	BAN_WORD VARCHAR2(30) /* 금지어 */
);

COMMENT ON TABLE BAN IS '금지어관리';

COMMENT ON COLUMN BAN.BAN_NO IS '금지어번호';

COMMENT ON COLUMN BAN.BAN_WORD IS '금지어';

CREATE UNIQUE INDEX PK_BAN
	ON BAN (
		BAN_NO ASC
	);

ALTER TABLE BAN
	ADD
		CONSTRAINT PK_BAN
		PRIMARY KEY (
			BAN_NO
		);

/* 회원관심사 */
CREATE TABLE MEM_INTER (
	MEM_NO NUMBER NOT NULL, /* 회원번호 */
	INTRST_NO NUMBER NOT NULL /* 관심사번호 */
);

COMMENT ON TABLE MEM_INTER IS '회원관심사';

COMMENT ON COLUMN MEM_INTER.MEM_NO IS '회원번호';

COMMENT ON COLUMN MEM_INTER.INTRST_NO IS '관심사번호';

CREATE UNIQUE INDEX PK_MEM_INTER
	ON MEM_INTER (
		MEM_NO ASC,
		INTRST_NO ASC
	);

ALTER TABLE MEM_INTER
	ADD
		CONSTRAINT PK_MEM_INTER
		PRIMARY KEY (
			MEM_NO,
			INTRST_NO
		);

/* 방문자 */
CREATE TABLE VISITOR (
	VSTR_DATE DATE NOT NULL, /* 일시 */
	VSTR_CNT NUMBER /* 방문수 */
);

COMMENT ON TABLE VISITOR IS '방문자';

COMMENT ON COLUMN VISITOR.VSTR_DATE IS '일시';

COMMENT ON COLUMN VISITOR.VSTR_CNT IS '방문수';

CREATE UNIQUE INDEX PK_VISITOR
	ON VISITOR (
		VSTR_DATE ASC
	);

ALTER TABLE VISITOR
	ADD
		CONSTRAINT PK_VISITOR
		PRIMARY KEY (
			VSTR_DATE
		);

/* 노선 */
CREATE TABLE ROUTE (
	RT_ID VARCHAR2(10), /* 정류소ID */
	RT_CD VARCHAR2(10) /* 버스CD */
);

COMMENT ON TABLE ROUTE IS '노선';

COMMENT ON COLUMN ROUTE.RT_ID IS '정류소ID';

COMMENT ON COLUMN ROUTE.RT_CD IS '버스CD';

ALTER TABLE MEMBER
	ADD
		CONSTRAINT FK_JOB_TO_MEMBER
		FOREIGN KEY (
			MEM_JOB
		)
		REFERENCES JOB (
			JOB_NO
		);

ALTER TABLE BLACKLIST
	ADD
		CONSTRAINT FK_MEMBER_TO_BLACKLIST
		FOREIGN KEY (
			BLK_MEM
		)
		REFERENCES MEMBER (
			MEM_NO
		);

ALTER TABLE POST
	ADD
		CONSTRAINT FK_BOARD_TO_POST
		FOREIGN KEY (
			POST_BRD
		)
		REFERENCES BOARD (
			BRD_NO
		);

ALTER TABLE POST
	ADD
		CONSTRAINT FK_MEMBER_TO_POST
		FOREIGN KEY (
			POST_MEM
		)
		REFERENCES MEMBER (
			MEM_NO
		);

ALTER TABLE POST
	ADD
		CONSTRAINT FK_ARTICLE_TO_POST
		FOREIGN KEY (
			POST_GU,
			POST_DONG,
			POST_ZIP,
			POST_RD
		)
		REFERENCES ARTICLE (
			ARTCL_GU,
			ARTCL_DONG,
			ARTCL_ZIP,
			ARTCL_RD
		);

ALTER TABLE REPLY
	ADD
		CONSTRAINT FK_POST_TO_REPLY
		FOREIGN KEY (
			RPL_POST
		)
		REFERENCES POST (
			POST_NO
		);

ALTER TABLE REPLY
	ADD
		CONSTRAINT FK_MEMBER_TO_REPLY
		FOREIGN KEY (
			RPL_MEM
		)
		REFERENCES MEMBER (
			MEM_NO
		);

ALTER TABLE REPORT
	ADD
		CONSTRAINT FK_POST_TO_REPORT
		FOREIGN KEY (
			RPT_POST
		)
		REFERENCES POST (
			POST_NO
		);

ALTER TABLE REPORT
	ADD
		CONSTRAINT FK_MEMBER_TO_REPORT
		FOREIGN KEY (
			RPT_MEM
		)
		REFERENCES MEMBER (
			MEM_NO
		);

ALTER TABLE PICTURE
	ADD
		CONSTRAINT FK_POST_TO_PICTURE
		FOREIGN KEY (
			PIC_POST
		)
		REFERENCES POST (
			POST_NO
		);

ALTER TABLE ADVERTISEMENT
	ADD
		CONSTRAINT FK_MEMBER_TO_ADVERTISEMENT
		FOREIGN KEY (
			AD_MEM
		)
		REFERENCES MEMBER (
			MEM_NO
		);

ALTER TABLE FAVORITE
	ADD
		CONSTRAINT FK_MEMBER_TO_FAVORITE
		FOREIGN KEY (
			FAVOR_MEM
		)
		REFERENCES MEMBER (
			MEM_NO
		);

ALTER TABLE FAVORITE
	ADD
		CONSTRAINT FK_ARTICLE_TO_FAVORITE
		FOREIGN KEY (
			FAVOR_GU,
			FAVOR_DONG,
			FAVOR_ZIP,
			FAVOR_RD
		)
		REFERENCES ARTICLE (
			ARTCL_GU,
			ARTCL_DONG,
			ARTCL_ZIP,
			ARTCL_RD
		);

ALTER TABLE DEAL
	ADD
		CONSTRAINT FK_ARTICLE_TO_DEAL
		FOREIGN KEY (
			DL_GU,
			DL_DONG,
			DL_ZIP,
			DL_RD
		)
		REFERENCES ARTICLE (
			ARTCL_GU,
			ARTCL_DONG,
			ARTCL_ZIP,
			ARTCL_RD
		);

ALTER TABLE ARTICLE
	ADD
		CONSTRAINT FK_BUILDING_CLASSF_TO_ARTICLE
		FOREIGN KEY (
			ARTCL_BC
		)
		REFERENCES BUILDING_CLASSF (
			BC_NO
		);

ALTER TABLE MARKET_DETAIL
	ADD
		CONSTRAINT FK_MARKET_TO_MARKET_DETAIL
		FOREIGN KEY (
			MKD_MK,
			MKD_MK_DONG
		)
		REFERENCES MARKET (
			MK_NM,
			MK_DONG
		);

ALTER TABLE INSTI_ATTR
	ADD
		CONSTRAINT FK_INSTI_TO_INSTI_ATTR
		FOREIGN KEY (
			IATTR_INSTI
		)
		REFERENCES INSTI (
			INSTI_NO
		);

ALTER TABLE INSTI_ATTR
	ADD
		CONSTRAINT FK_INSTI_ATTR_TO_INSTI_ATTR
		FOREIGN KEY (
			IATTR_PARE
		)
		REFERENCES INSTI_ATTR (
			IATTR_NO
		);

ALTER TABLE MEM_INTER
	ADD
		CONSTRAINT FK_MEMBER_TO_MEM_INTER
		FOREIGN KEY (
			MEM_NO
		)
		REFERENCES MEMBER (
			MEM_NO
		);

ALTER TABLE MEM_INTER
	ADD
		CONSTRAINT FK_INTEREST_TO_MEM_INTER
		FOREIGN KEY (
			INTRST_NO
		)
		REFERENCES INTEREST (
			INTRST_NO
		);

ALTER TABLE ROUTE
	ADD
		CONSTRAINT FK_STATION_TO_ROUTE
		FOREIGN KEY (
			RT_ID
		)
		REFERENCES STATION (
			STTN_ID
		);

ALTER TABLE ROUTE
	ADD
		CONSTRAINT FK_BUS_TO_ROUTE
		FOREIGN KEY (
			RT_CD
		)
		REFERENCES BUS (
			BUS_CD
		);



drop sequence seq_dl_no       ;
drop sequence seq_brd_no      ;
drop sequence seq_pic_no      ;
drop sequence seq_rpt_no      ;
drop sequence seq_post_no     ;
drop sequence seq_rpl_no      ;
drop sequence seq_ad_no       ;
drop sequence seq_mem_no      ;
drop sequence seq_blk_no      ;
drop sequence seq_job_no      ;
drop sequence seq_intrst_no   ;
drop sequence seq_favor_no    ;
drop sequence seq_ban_no      ;
drop sequence seq_mkd_no      ;
drop sequence seq_insti_no    ;
drop sequence seq_iattr_no    ;


create sequence seq_dl_no       start with 1    increment by 1;
create sequence seq_brd_no      start with 1  increment by 1;
create sequence seq_pic_no      start with 1  increment by 1;
create sequence seq_rpt_no      start with 1  increment by 1;
create sequence seq_post_no     start with 1  increment by 1;
create sequence seq_rpl_no      start with 1  increment by 1;
create sequence seq_ad_no       start with 1  increment by 1;
create sequence seq_mem_no      start with 6  increment by 1;
create sequence seq_blk_no      start with 1  increment by 1;
create sequence seq_job_no      start with 1  increment by 1;
create sequence seq_intrst_no   start with 1  increment by 1;
create sequence seq_favor_no    start with 1  increment by 1;
create sequence seq_ban_no      start with 1  increment by 1;
create sequence seq_mkd_no      start with 1  increment by 1;
create sequence seq_insti_no    start with 1  increment by 1;
create sequence seq_iattr_no    start with 1  increment by 1;

--로그 에러를 추적하기 위해서 만듬
/
BEGIN 
DBMS_ERRLOG.create_error_log(dml_table_name => 'ARTICLE'); 
END; 
/
BEGIN 
DBMS_ERRLOG.create_error_log(dml_table_name => 'STATION'); 
END; 
/


--insert all deal 할때 쓰일 seq 생성용 function
CREATE FUNCTION get_seq_dl RETURN NUMBER IS
BEGIN
  RETURN seq_dl_no.nextval;
END;
/

--market_detail sequence function
CREATE FUNCTION get_seq_mkd_no RETURN NUMBER IS
BEGIN
  RETURN seq_mkd_no.nextval;
END;
/



--건물 구분
insert into building_classf values ('apt', '아파트');
insert into building_classf values ('single', '단독');
insert into building_classf values ('multi', '다가구');
insert into building_classf values ('multip', '연립다세대');
insert into building_classf values ('office','오피스텔');
insert into building_classf values ('store','상가');

--직업 구분
insert into job values (0, null);
insert into job values (seq_job_no.nextval, '학생');
insert into job values (seq_job_no.nextval, '직장인');
insert into job values (seq_job_no.nextval, '사업자');
insert into job values (seq_job_no.nextval, '무직');
insert into job values (seq_job_no.nextval, '주부');
insert into job values (seq_job_no.nextval, '기타');

--관리자 회원
INSERT INTO member (mem_no, mem_email, mem_pass, mem_nm, mem_mngr)
    SELECT 1 mem_no, 'whdgns5059@gmail.com' mem_email, 'f6e0a1e2ac41945a9aa7ff8a8aaacebc12a3bcc981a929ad5cf81a9e11ae' mem_pass, '김종훈' mem_nm, 'Y' mem_mngr
      FROM DUAL
     UNION ALL
    SELECT 2 mem_no, 'so4741@gmail.com' mem_email, 'f6e0a1e2ac41945a9aa7ff8a8aaacebc12a3bcc981a929ad5cf81a9e11ae' mem_pass, '이소형' mem_nm, 'Y' mem_mngr
      FROM DUAL
     UNION ALL
     SELECT 3 mem_no, 'ggamia01@gmail.com' mem_email, 'f6e0a1e2ac41945a9aa7ff8a8aaacebc12a3bcc981a929ad5cf81a9e11ae' mem_pass, '송연진' mem_nm, 'Y' mem_mngr
      FROM DUAL
     UNION ALL
     SELECT 4 mem_no, '1003yd@gmail.com' mem_email, 'f6e0a1e2ac41945a9aa7ff8a8aaacebc12a3bcc981a929ad5cf81a9e11ae' mem_pass, '유다영' mem_nm, 'Y' mem_mngr
      FROM DUAL
     UNION ALL
     SELECT 5 mem_no, 'nlbo1204@gmail.com' mem_email, 'f6e0a1e2ac41945a9aa7ff8a8aaacebc12a3bcc981a929ad5cf81a9e11ae' mem_pass, '김주연' mem_nm, 'Y' mem_mngr
      FROM DUAL;


--게시판 분류
insert into board (brd_no, brd_nm)
values (seq_brd_no.nextval, '리뷰');



commit;